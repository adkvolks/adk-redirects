<?php
/**
 * _RESOURCES \\ PHP \\ SETTINGS
 *
 * @link    https://github.com/adkvolks/adk-redirects
 * @package adk-redirects
 */
namespace ADK\REDIRECTS;

// ====================================================================================================
// Register Settings
// ====================================================================================================
add_action("admin_init", function() {
    register_setting(
        "redirect_settings_group",
        "redirect_settings_website_urls",
        array("type" => "string", "sanitize_callback" => "ADK\REDIRECTS\sanitize_website_urls")
    );

    register_setting(
        "redirect_settings_group",
        "redirect_settings_404_report",
        array("type" => "bool")
    );

    register_setting(
        "redirect_settings_group",
        "redirect_settings_404_pause",
        array("type" => "bool")
    );

    // ==================================================
    // Section - Additional URLs
    // ==================================================
    add_settings_section(
        "redirect_settings_website_urls_section",
        "Additional Domains",
        function() { esc_html_e("Add any other domain names that currently direct traffic to this website. Make sure their DNS settings are configured the same as the primary domain. Short domains can be useful to include here.", TEXTDOMAIN); },
        "adk-redirects-settings"
    );

    add_settings_field(
        "redirect_settings_website_urls",
        "",
        "ADK\REDIRECTS\\redirect_settings_website_urls_callback",
        "adk-redirects-settings",
        "redirect_settings_website_urls_section"
    );

    // ==================================================
    // Section - Enable 404 Report
    // ==================================================
    add_settings_section(
        "redirect_settings_404_report_section",
        "404 Reporting",
        function() { esc_html_e('Enable 404 Error Reporting to automatically track and log instances where visitors encounter "Page Not Found" errors on your website. This helps identify broken links and improve user experience.', TEXTDOMAIN); },
        "adk-redirects-settings"
    );

    add_settings_field(
        "redirect_settings_404_report",
        "",
        "ADK\REDIRECTS\\redirect_settings_404_report_callback",
        "adk-redirects-settings",
        "redirect_settings_404_report_section"
    );

    // ==================================================
    // Section - Pause 404 Report
    // ==================================================
    $option_404_report = get_option("redirect_settings_404_report", 0);

    if($option_404_report) {
        add_settings_section(
            "redirect_settings_404_pause_section",
            "Pause 404 Capture",
            function() { esc_html_e('Toggle this setting to temporarily stop or resume the recording of 404 errors generated by the website. Disabling capture can be useful during maintenance or testing.', TEXTDOMAIN); },
            "adk-redirects-settings"
        );

        add_settings_field(
            "redirect_settings_404_pause",
            "",
            "ADK\REDIRECTS\\redirect_settings_404_pause_callback",
            "adk-redirects-settings",
            "redirect_settings_404_pause_section"
        );
    }
});


/**
 * Sanitizes the website URLs before saving.
 *
 * @param array $urls Array of website URLs.
 * @return array Sanitized array of website URLs.
 */
function sanitize_website_urls($urls) {
    if(!is_array($urls)) 
        return array();

    $sanitized_urls = array();
    foreach($urls as $url) {
        $sanitized_url = esc_url_raw(trim($url));
        if (!empty($sanitized_url)) 
            $sanitized_urls[] = $sanitized_url;
    }
    return array_values(array_filter($sanitized_urls));
}



// ====================================================================================================
// Create Admin Page
// ====================================================================================================
add_action("admin_menu", function() {
    add_submenu_page(
        "edit.php?post_type=adk-redirects",
        "ADK \\\\ REDIRECTS \\\\ SETTINGS",
        "Settings",
        "manage_options",
        "adk-redirects-settings",
        "ADK\REDIRECTS\\render_admin_menu_page",
        'data:image/svg+xml;base64,' . base64_encode(ICON)
    );
});

/**
 * Callback function to render the content of the submenu page.
 */
function render_admin_menu_page() {
    printf("<div class='wrap'>");
        printf("<h1>Redirect Settings</h1>");
        printf("<form method='post' action='options.php'>");
            settings_fields("redirect_settings_group");
            do_settings_sections("adk-redirects-settings");
            submit_button();
        printf("</form>");
    printf("</div>");
}


/**
 * Callback to render the website URLs input fields.
 */
function redirect_settings_website_urls_callback() {
    $urls = get_option("redirect_settings_website_urls", array("")); // Default to one empty field

    echo '<div id="additionalDomainsContainer">';
    if (!empty($urls)) {
        foreach($urls as $index => $url) {
            printf(
                '<div class="additionalDomainsRow">
                    <label for="website_url_%1$s">%2$s:</label>
                    <input type="text" id="website_url_%1$s" name="redirect_settings_website_urls[]" value="%3$s" class="regular-text">
                    <button type="button" class="button remove-url">Remove</button>
                 </div>',
                $index,
                sprintf(esc_html__('URL %d', TEXTDOMAIN), $index + 1),
                esc_attr($url)
            );
        }
    } else {
        echo '<div class="additionalDomainsRow">
                <label for="website_url_0">' . esc_html__('URL 1', TEXTDOMAIN) . ':</label>
                <input type="text" id="website_url_0" name="redirect_settings_website_urls[]" value="" class="regular-text">
             </div>';
    }
    echo '</div>';

    echo '<div style="text-align: right"><button type="button" class="button" id="add-new-url" style="width: 102px">' . esc_html__( 'Add New URL', TEXTDOMAIN ) . '</button></div>';
}


/**
 * Callback to render the 404 Report setting
 */
function redirect_settings_404_report_callback() {
    $option_404_report = get_option("redirect_settings_404_report", 0);

    echo "
        <div class=''>
            <select name='redirect_settings_404_report'>
                <option value='0' ". ($option_404_report == 0 ? "SELECTED" : "") .">No - Do Not Enable</option>
                <option value='1' ". ($option_404_report == 1 ? "SELECTED" : "") .">Yes - Enable</option>
            </select>
        </div>
    ";
}


/**
 * Callback to render the 404 Pause setting
 */
function redirect_settings_404_pause_callback() {
    $option_404_pause = get_option("redirect_settings_404_pause", 0);

    echo "
        <div class=''>
            <select name='redirect_settings_404_pause'>
                <option value='0' ". ($option_404_pause == 0 ? "SELECTED" : "") .">Capture 404 Reports</option>
                <option value='1' ". ($option_404_pause == 1 ? "SELECTED" : "") .">Pause 404 Reports</option>
            </select>
        </div>
    ";
}